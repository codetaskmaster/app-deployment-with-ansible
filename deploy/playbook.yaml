# Install system apt packages
- hosts: webservers
  become: true
  become_method: sudo

  tasks:
    - name: update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 43200

    - name: install requisite packages
      ansible.builtin.apt:
        pkg:
          - python3.12-venv
          - nginx

# Install the application, note: don't use become sudo
- hosts: webservers
  tasks:
    - name: clone git respository and update locally
      ansible.builtin.git:
        repo: '{{git_repo}}'
        dest: '{{remote_project_path}}'
        clone: yes
        update: yes # Do a git pull if the repo already exists

    - name: install modules in a virtualenv
      pip:
        virtualenv_command: python3 -m venv
        requirements: '{{requirements_path}}'
        virtualenv: '{{venv_path}}'

# Configure application systemd gunicorn service and nginx server
- hosts: webservers
  become: true
  become_method: sudo
  tasks:
    - name: copy gunicorn service file to remote host
      ansible.builtin.copy:
        src: '{{service_file}}'
        dest: /etc/systemd/system/{{app}}.service

    - name: start gunicorn service
      systemd:
        name: '{{app}}.service'
        state: restarted
        daemon_reload: yes
        enabled: yes

    - name: copy nginx server config file to remote host
      ansible.builtin.template:
        src: '{{nginx_config}}'
        dest: /etc/nginx/sites-available/{{app}}

    - name: remove default nginx site config
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: creating a symlink between nginx sites-available and nginx sites-enabled directories
      ansible.builtin.file:
        src: /etc/nginx/sites-available/{{app}}
        dest: /etc/nginx/sites-enabled/default
        state: link
        force: yes

    - name: restart nginx server
      systemd:
        name: nginx
        state: restarted
        enabled: yes

    - name: allow SSH and nginx through the firewall (Uncomplicated Firewall:UFW)
      community.general.ufw:
        name: '{{item}}'
        rule: allow
      loop:
        - OpenSSH
        - Nginx Full

    - name: reloading UFW configurations
      community.general.ufw:
        state: reloaded
